steps:
  # Show the gcloud info and check if gcloud exists
  - name: ${_PYTHON_IMAGE}
    entrypoint: /bin/sh
    args:
    - -c
    - 'gcloud config list'
  # Check the Python version
  - name: ${_PYTHON_IMAGE}
    entrypoint: /bin/sh
    args:
    - -c
    - 'python3 .cloud-build/CheckPythonVersion.py'
  # Install Python dependencies
  - name: ${_PYTHON_IMAGE}
    entrypoint: pip
    args: ['install', '--upgrade',  '--user', '--requirement', '.cloud-build/requirements.txt']
  # Install Python dependencies and run testing script
  - name: ${_PYTHON_IMAGE}
    entrypoint: /bin/sh
    args:
    - -c
    - 'python3 -m pip freeze && python3 .cloud-build/execute_notebook_cli.py --notebook_source "${_NOTEBOOK_GCS_URI}" --output_file_or_uri "${_NOTEBOOK_OUTPUT_GCS_URI}"'
    env:
    - 'IS_TESTING=1'
  # # Manually copy artifacts to GCS
  # - name: gcr.io/cloud-builders/gsutil
  #   entrypoint: /bin/sh
  #   args: 
  #   - -c
  #   - 'if [ $(ls -pR "/workspace/${BUILD_ID}"  | grep -v / | grep -v ^$ | wc -l) -ne 0 ]; then gsutil -m -q rsync -r "/workspace/${BUILD_ID}" "${_GCS_ARTIFACTS_BUCKET}/test-artifacts/PR_${_PR_NUMBER}/BUILD_${BUILD_ID}/"; else echo "No artifacts to copy."; fi'
  # # Fail if there is anything in the failure folder
  # - name: ${_PYTHON_IMAGE}
  #   entrypoint: /bin/sh
  #   args: 
  #   - -c
  #   - 'echo "Download executed notebooks with this command: \"mkdir -p artifacts && gsutil rsync -r ${_GCS_ARTIFACTS_BUCKET}/test-artifacts/PR_${_PR_NUMBER}/BUILD_${BUILD_ID} artifacts/\"" && if [ "$(ls -A /workspace/${BUILD_ID}/failure | wc -l)" -ne 0 ]; then exit 1; else exit 0; fi' 
timeout: 86400s
